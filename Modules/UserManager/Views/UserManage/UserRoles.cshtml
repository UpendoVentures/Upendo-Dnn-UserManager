@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<DataTableResponse<Upendo.Modules.UserManager.ViewModels.RolesViewModel>>

@using System.Text.RegularExpressions
@using DotNetNuke.Web.Mvc.Helpers
@using Upendo.Modules.UserManager.ViewModels;
@using DotNetNuke.Services.Localization;

@{
    string srcLogo = DotNetNuke.Entities.Tabs.TabController.CurrentPage.Title +
    "/DesktopModules/MVC/Upendo.Modules.UserManager/Images/Upendo-logo-trans.png";
    string name = ViewBag.User.DisplayName;
    int userId = ViewBag.User.UserId;
    var pageIndexMinus = (@Model.PageIndex - @Model.Take) <= 0 ? 0 : (@Model.PageIndex - @Model.Take);
    var pageIndexPlus = @Model.PageIndex + @Model.Take;
    var showing = @Model.PageIndex + 1;
    var pageIndexTo = @Model.PageIndex + @Model.Take;
    var pageView = @Model.GoToPage > 1 ? @Model.GoToPage : (pageIndexTo / @Model.Take) == 0 ? 1 : (pageIndexTo / @Model.Take);
    string ResourceFile = "~/DesktopModules/MVC/Upendo.Modules.UserManager/App_LocalResources/UserRoles.resx";
    string SharedResourceFile = "~/DesktopModules/MVC/Upendo.Modules.UserManager/App_LocalResources/Shared.resx";
    var itemsPerPage = Model.Take;
    var totalItems = Model.RecordsTotal;
    var pagesTotal = (int)Math.Ceiling((double)totalItems / itemsPerPage);
}
<div class="admin-manager m10" id="Items-@Dnn.ModuleContext.ModuleId">
    <div class="center">
        <h2 id="title">@Localization.GetString("RoleList", @ResourceFile) <span class="lead">@name (@userId)</span></h2>
    </div>
    <div class="col-md-12 mt5 mb15">
        <div class="AM-row">
            <div class="col-sm-12 col-md-3 AM-d-flex AM-justify-content-start">
                <div class="dropdown">
                    <a class="dropDown dropdown-toggle"><strong>@Localization.GetString("RowsPerPage", @SharedResourceFile) @Model.Take <span class="caret"></span></strong></a>
                    <div class="dropdown-content">
                        <a class="confirm page-link" href="@Url.Action("UserRoles", "UserManage", new { take = 5, pageIndex = @Model.PageIndex, search = @Model.Search, itemId = @userId })">
                            <span aria-AM-hidden="true">5</span>
                        </a>
                        <a class="confirm page-link" href="@Url.Action("UserRoles", "UserManage", new { take = 10, pageIndex = @Model.PageIndex, search = @Model.Search, itemId = @userId })">
                            <span aria-AM-hidden="true">10</span>
                        </a>
                        <a class="confirm page-link" href="@Url.Action("UserRoles", "UserManage", new { take = 50, pageIndex = @Model.PageIndex, search = @Model.Search, itemId = @userId })">
                            <span aria-AM-hidden="true">50</span>
                        </a>
                        <a class="confirm page-link" href="@Url.Action("UserRoles", "UserManage", new { take = 100, pageIndex = @Model.PageIndex, search = @Model.Search, itemId = @userId })">
                            <span aria-AM-hidden="true">100</span>
                        </a>
                        <a class="confirm page-link" href="@Url.Action("UserRoles", "UserManage", new { take = @Model.RecordsTotal, pageIndex = @Model.PageIndex, search = @Model.Search, itemId = @userId })">
                            <span aria-AM-hidden="true">@Localization.GetString("All", @SharedResourceFile)</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-5 AM-d-flex AM-justify-content-center">
                <div class="AM-input-group">
                    <div class="AM-input-group-prepend">
                        <button class="AM-btn AM-btn-primary box-shadow" type="submit">@Localization.GetString("Search", @SharedResourceFile)</button>
                    </div>
                    @Html.TextBoxFor(m => m.Search, new { @class = "form-control AM-search-input mt5", @type = "text" })
                </div>
            </div>
            <div class="col-md-4 AM-d-flex AM-justify-content-end">
                <a type="button" class="btn btn-warning" href="@Url.Action("Index", "UserManage", new {})" style="color: white;">
                    <span class="fa fa-chevron-left color-white" aria-AM-hidden="true"></span>
                    @Localization.GetString("UserList", @ResourceFile)
                </a>
            </div>
        </div>
    </div>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr class="background-dark-brown color-white">
                <th AM-hidden></th>
                <th>@Localization.GetString("Role", @ResourceFile)</th>
                <th>@Localization.GetString("Start", @ResourceFile)</th>
                <th>@Localization.GetString("Expires", @ResourceFile)</th>
                <th class="centerInTable">@Localization.GetString("Actions", @ResourceFile)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.PagesTotal == 0)
            {
                <tr>
                    <td colspan="6">
                        <div class="centerInTable">
                            <h1>@Localization.GetString("NoRolesFounds", @ResourceFile)</h1>
                            <h2>@Localization.GetString("SearchCriteria", @ResourceFile)</h2>
                        </div>
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.Data)
                {
                    <tr>
                        <td AM-hidden>
                            @item.Index
                        </td>
                        <td>
                            @item.RoleName
                        </td>
                        <td>
                            <p>
                                @(item.EffectiveDate.HasValue && item.EffectiveDate.Value != DateTime.MinValue ? item.EffectiveDate.Value.ToString("yyyy-MM-dd") : "")
                            </p>
                        </td>
                        <td>
                            <p>
                                @(item.ExpiryDate.HasValue && item.ExpiryDate.Value != DateTime.MinValue ? item.ExpiryDate.Value.ToString("yyyy-MM-dd") : "")
                            </p>
                        </td>
                        <td class="admin-manager centerInTable">
                            <a class="AM-btn AM-btn-sm expiresSubmitButton @(item.HasRole ? "" : "custom-disabled")" data-toggle="tooltip" data-placement="top" title="@Localization.GetString("StartDate", @ResourceFile)">
                                <div class="input-group date startPicker" data-role-id="@item.RoleId">
                                    <input class="startDateInput AM-hidden" type="text" value="@(item.EffectiveDate.HasValue && item.EffectiveDate.Value != DateTime.MinValue ? item.EffectiveDate.Value.ToString("yyyy-MM-dd") : "")">
                                    <span class="input-group-addon AM-width-auto">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                            </a>
                            <a class="AM-btn AM-btn-sm expiresSubmitButton @(item.HasRole ? "" : "custom-disabled")" data-toggle="tooltip" data-placement="top" title="@Localization.GetString("ExpiresDate", @ResourceFile)">
                                <div class="input-group date expiresPicker" data-role-id="@item.RoleId">
                                    <input class="expiresDateInput AM-hidden" type="text" value="@(item.ExpiryDate.HasValue && item.ExpiryDate.Value != DateTime.MinValue ? item.ExpiryDate.Value.ToString("yyyy-MM-dd") : "")">
                                    <span class="input-group-addon AM-width-auto">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                            </a>
                            <a class="deleteButton AM-btn AM-btn-sm expiresSubmitButton @(item.HasRole ? "" : "custom-disabled")" data-toggle="tooltip" data-placement="top" title="@Localization.GetString("ClearDates", @ResourceFile)" data-role-id="@item.RoleId">
                                <span class="input-group-addon AM-width-auto">
                                    <i class="fa fa-remove"></i>
                                </span>
                            </a>

                            @if (@item.HasRole == true)
                            {
                                <a class="AM-btn AM-btn-danger AM-btn-sm edit hint--top hint-- remove-role-btn" data-item-id="@userId" data-role-id="@item.RoleId"
                                   data-toggle="tooltip" data-placement="top" title="@Localization.GetString("Delete", @ResourceFile)">
                                    <span class="fa fa-trash color-white" aria-AM-hidden="true"></span>
                                </a>
                            }
                            else
                            {
                                <a class="AM-btn AM-btn-primary btn-sm edit hint--top hint-- add-role-btn" data-item-id="@userId" data-role-id="@item.RoleId"
                                   data-toggle="tooltip" data-placement="top" title="@Localization.GetString("AddRole", @ResourceFile)">
                                    <span class="fa fa-plus color-white" aria-AM-hidden="true"></span>
                                </a>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div id="confirmModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title text-danger">@Localization.GetString("YouAreSure", @ResourceFile)</h2>
                </div>
                <div class="modal-body">
                    <p class="text-danger">@Localization.GetString("ClearStartEndDate", @ResourceFile)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="confirmDelete">@Localization.GetString("Ok", @ResourceFile)</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localization.GetString("Cancel", @ResourceFile)</button>
                </div>
            </div>
        </div>
    </div>
    <div class="data-footer">
        <div class="col-md-12 mt5">
            <div class="AM-row">
                <div class="col-md-3 AM-d-flex AM-justify-content-start">
                    <div class="AM-input-group">
                        <span class="AM-input-group-btn">
                            <button class="AM-btn AM-btn-primary box-shadow" type="submit">@Localization.GetString("GoToPage", @SharedResourceFile)</button>
                        </span>
                        @Html.TextBoxFor(m => m.GoToPage, new { @class = "form-control", @type = "text", })
                    </div>
                </div>
                <div class="col-md-5 center">
                    @Localization.GetString("Page", @SharedResourceFile)
                    <a class="AM-btn @(pageView <= 1 ? "custom-disabled" : "")" href="@Url.Action("Index", "UserManage", new {take = @Model.Take, pageIndex=@pageIndexMinus, filter = @ViewBag.Filter, search=@Model.Search, orderBy=@Model.OrderBy , order=@Model.Order})"
                       data-toggle="tooltip" data-placement="top" title="@Localization.GetString("Previus", @SharedResourceFile)">
                        <span class="fa fa-chevron-left" aria-hidden="true"></span>
                    </a>
                    <strong>@pageView</strong>
                    <a class="AM-btn @(pageView >= pagesTotal ? "custom-disabled" : "")" href="@Url.Action("Index", "UserManage", new {take = @Model.Take, pageIndex=@pageIndexPlus, filter = @ViewBag.Filter, search=@Model.Search, orderBy=@Model.OrderBy , order=@Model.Order})"
                       data-toggle="tooltip" data-placement="top" title="@Localization.GetString("Next", @SharedResourceFile)">
                        <span class="fa fa-chevron-right" aria-hidden="true"></span>
                    </a>
                    @Localization.GetString("Of", @SharedResourceFile) <strong>@pagesTotal</strong> @Localization.GetString("Pages", @SharedResourceFile)
                </div>
                <div class="col-md-4 AM-d-flex AM-justify-content-end">
                    <strong class="line-height-normal mr5">@Model.RecordsTotal</strong> @Localization.GetString("Entries", @SharedResourceFile)
                </div>
            </div>
        </div>
    </div>
</div>
<script>
$(document).ready(function () {
    var correctlyEdited = '@DotNetNuke.Services.Localization.Localization.GetString("CorrectlyEdited.Text", "~/DesktopModules/MVC/Upendo.Modules.UserManager/App_LocalResources/UserRoles.resx")';
    var errorOccurred = '@DotNetNuke.Services.Localization.Localization.GetString("ErrorOccurred.Text", "~/DesktopModules/MVC/Upendo.Modules.UserManager/App_LocalResources/UserRoles.resx")';

    $('.add-role-btn').on('click', function(e) {
        e.preventDefault();

        var itemId = $(this).data('item-id');
        var roleId = $(this).data('role-id');
        var url = '@Url.Action("AddUserRole", "UserManage")' + '?itemId=' + itemId + '&roleId=' + roleId;

        $.ajax({
            url: url,
            type: 'POST',
            success: function(response) {
                // Show a success message
                alert('User role added successfully');
                location.reload();
            },
            error: function(error) {
                // Show an error message
                alert('An error occurred while adding the user role');
            }
        });
    });

    $('.remove-role-btn').on('click', function(e) {
        e.preventDefault();

        var itemId = $(this).data('item-id');
        var roleId = $(this).data('role-id');
        var url = '@Url.Action("RemoveUserRole", "UserManage")' + '?itemId=' + itemId + '&roleId=' + roleId;

        $.ajax({
            url: url,
            type: 'POST',
            success: function(response) {
                // Show a success message
                alert('User role removed successfully');
                location.reload();
            },
            error: function(error) {
                // Show an error message
                alert('An error occurred while removing the user role');
            }
        });
    });

  $('.admin-manager .startPicker').each(function() {
            flatpickr(this, {
                dateFormat: 'Y-m-d',
                defaultDate: $(this).find('input').val(),
                onChange: function(selectedDates, dateStr, instance) {
                    var date = dateStr; // Get the date from the input field
                    var roleId = $(instance.element).data('role-id');
                    var itemId = @userId; // Get the itemId from the Razor variable
                    var baseUrl = '@Url.Action("UpdateDateTimeUserRole", "UserManage")';
                    var url = baseUrl + '?itemId=' + itemId + '&roleId=' + roleId;
                    // Check if it's startPicker or expiresPicker
                    if ($(instance.element).hasClass('startPicker')) {
                        url += '&effectiveDate=' + date;
                    }
                    // Send the AJAX request
                    $.ajax({
                        url: url,
                        type: 'POST',
                        success: function(response) {
                            // Show a success message
                            alert(correctlyEdited);
                            location.reload();
                        },
                        error: function(error) {
                            // Show an error message
                            alert(errorOccurred);
                        }
                    });

                    // Update the minimum selectable date of the expiresPicker
                    var newDate = new Date(selectedDates[0]);
                    newDate.setDate(newDate.getDate() + 1); // Add one day to the selected date
                    $(instance.element).closest('tr').find('.expiresPicker').flatpickr({
                        minDate: newDate
                    });
                }
            });
        });

        $('.admin-manager .expiresPicker').each(function() {
            var expiresDateInput = $(this).find('.expiresDateInput');
            var expiresDate = expiresDateInput.val() ? new Date(expiresDateInput.val()) : new Date();
            var minExpiresDate = new Date(expiresDate);
            // Get the startPicker value
            var startPickerValue = $(this).closest('tr').find('.startPicker input').val();
            if (startPickerValue) {
                // Parse year, month, and day from startPickerValue
                var [year, month, day] = startPickerValue.split('-').map(Number);
                // Create a new date in local time
                minExpiresDate = new Date(year, month - 1, day);
                minExpiresDate.setDate(minExpiresDate.getDate() + 1);
            }
            flatpickr(this, {
                dateFormat: 'Y-m-d',
                defaultDate: $(this).find('input').val(),
                minDate: minExpiresDate,
                onChange: function(selectedDates, dateStr, instance) {
                    var date = dateStr; // Get the date from the input field
                    var roleId = $(instance.element).data('role-id');
                    var itemId = @userId; // Get the itemId from the Razor variable
                    var baseUrl = '@Url.Action("UpdateDateTimeUserRole", "UserManage")';
                    var url = baseUrl + '?itemId=' + itemId + '&roleId=' + roleId;
                    // Check if it's startPicker or expiresPicker
                    if ($(instance.element).hasClass('expiresPicker')) {
                        url += '&expiryDate=' + date;
                    }
                    // Send the AJAX request
                    $.ajax({
                        url: url,
                        type: 'POST',
                        success: function(response) {
                            // Show a success message
                            alert(correctlyEdited);
                            location.reload();
                        },
                        error: function(error) {
                            // Show an error message
                            alert(errorOccurred);
                        }
                    });
                }
            });
        });

    var roleId; // Define roleId in a scope accessible to both event handlers

    $('.deleteButton').click(function(e) {
        e.preventDefault();
        roleId = $(this).data('role-id'); // Assign the roleId from the clicked button to the outer roleId variable
        $('#confirmModal').modal('show');
    });

    $('#confirmDelete').click(function() {
        $('#confirmModal').modal('hide');
        var itemId = @userId; // Get the itemId from the Razor variable
        var baseUrl = '@Url.Action("SetDateTimeUserRoleNull", "UserManage")';
        var url = baseUrl + '?itemId=' + itemId + '&roleId=' + roleId;
        $.ajax({
            url: url,
            type: 'POST',
            success: function(response) {
                // Show a success message
                alert(correctlyEdited);
                location.reload();
            },
            error: function(error) {
                // Show an error message
                alert(errorOccurred);
            }
        });
    });
});
</script>
<script>
    $(function () {
        $('.dropdown-toggle').dropdown()
    });

    $(function () {
    var deleteText = '@DotNetNuke.Services.Localization.Localization.GetString("DeleteConfirmation.Text", "~/DesktopModules/MVC/Upendo.Modules.UserManager/App_LocalResources/Index.resx")';
    $('#dialogs-delete .confirm').dnnConfirm({
        title: "",
        yesText: "Delete",
        noText: "Cancel",
        dialogClass: 'dnnFormPopup',
        text: '<p style="font-size:20px;">' + deleteText + '</p>'
    });
});
</script>
