@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<Upendo.Modules.UserManager.ViewModels.UserViewModel>

@using System.Collections.Generic
@using DotNetNuke.Web.Mvc.Helpers
@{
    string defaultUserPicture = "/DesktopModules/MVC/Upendo.Modules.UserManager/Images/defaultUserPicture.jpg";
}
<div class="col-7">
    <div class="accountSettings">
        <h4 class="center" id="title">ACCOUNT SETTINGS</h4>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @Html.ValidationSummary(false, "", new { @class = "" })
            </div>
        }
        <fieldset>
            <div class="formItem col-6">
                <div><label>First Name</label></div>
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="formItem col-6">
                <div><label>Last Name</label></div>
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
            <div class="formItem col-6">
                <div><label>Username</label></div>
                @Html.TextBoxFor(m => m.Username)
                @Html.ValidationMessageFor(m => m.Username)
            </div>
            <div class="formItem col-6">
                <div><label>Email</label></div>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="formItem col-6">
                <div><label>New Password</label></div>
                @Html.TextBoxFor(m => m.Password, new { @id = "password", @type = "password" })
            </div>
            <div class="formItem col-6">
                <div><label>Confirm Password</label></div>
                @Html.TextBoxFor(m => m.ConfirmPassword, new
                {
                @id = "confirm_password",
                @type = "password",
                onkeyup =
                "validatePassword();"
                })
                <span id='message'></span>
            </div>
            <div class="formItem col-12">
                <div class="dnnFormItem col-3">
                    @Html.CheckBoxFor(m => m.IsSuperUser, new { @id = "checkbox" })
                    <label>IsSuperUser</label>
                </div>
                <div class="dnnFormItem col-3">
                    @Html.CheckBoxFor(m => m.Approved, new { @id = "checkbox" })
                    <label>Approved</label>
                </div>
                <div class="dnnFormItem col-3">
                    @Html.CheckBoxFor(m => m.IsDeleted, new { @id = "checkbox" })
                    <label>IsDeleted</label>
                </div>
                <div class="dnnFormItem col-6">
                    @Html.CheckBoxFor(m => m.SendEmail, new { @id = "checkbox" })
                    <label>Send An Email To User</label>
                </div>
                @Html.HiddenFor(m => m.UserId)
            </div>
        </fieldset>
        <div class="col-12 mt5">
            <a class="btn btn-info btn-sm" href="@Url.Action("UserRoles", "UserManage", new {itemId = @Model.UserId})">
                <span class="color-white">User Role Management</span>
            </a>
        </div>
    </div>
</div>
<div class="col-5">
    <h4 class="center" id="title">ACCOUNT DATA</h4>
    <div class="accountData">
        <div>
            <img src=@defaultUserPicture alt="User" width="200" height="200" class="float-right">
        </div>
        <p>User ID: @Model.UserId</p>
        <p>Display Name: @Model.DisplayName</p>
        <p>Created Date: @Model.CreatedOnDate</p>
        <p>Last Activity Date: @Model.LastModifiedOnDate</p>
        <p>Update Password: @Model.UpdatePassword</p>
        <h4 id="subtitle">User Roles</h4>
        <ul>
            @{
                foreach (var item in Model.UserRoles)
                {
                    <li> @item</li>
                }
            }
        </ul>
    </div>
</div>
<div class="col-12 mt20">
    <div class="buttomForm ">
        <div class="center">
            <button type="submit" class="primary" id="saveButton">Save</button>
            <button id="cancelEdit" href="#">@Dnn.LocalizeString("Cancel")</button>
        </div>
    </div>
</div>
<script>

</script>
<script type="text/javascript">
    function validatePassword() {
        var password = document.getElementById('password').value;
        var confirm_password = document.getElementById('confirm_password').value;
        var message = document.getElementById('message');
        if (password == confirm_password) {
            message.style.color = 'green';
            message.innerHTML = 'Match';
            // Enabling a button again
            document.querySelector('#saveButton').classList.remove("disabled");
            document.querySelector('#saveButton').classList.add("primary");
        } else {
            message.style.color = 'red';
            message.innerHTML = 'Password and Confirmation Password must match.';
            // Disabling a button
            document.querySelector('#saveButton').classList.remove("primary");
            document.querySelector('#saveButton').classList.add("disabled");
        }
    }
    /*globals jQuery, window, Sys */
    (function ($, Sys) {
        function dnnEditBasicSettings() {
            $('#dnnEditBasicSettings').dnnPanels();
            $('#dnnEditBasicSettings .dnnFormExpandContent a').dnnExpandAll({
                expandText: '@Dnn.LocalizeString("ExpandAll")',
                collapseText: '@Dnn.LocalizeString("CollapseAll")',
                targetArea: '#dnnEditBasicSettings'
            });
        };
        $(function () {
            $('#cancelEdit').click(function () { dnnModal.closePopUp(false); });
            dnnEditBasicSettings();
            Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () {
                dnnEditBasicSettings();
            });
        });
    }(jQuery, window.Sys));
</script>